version: "3.8"

services:
  # Backend API Service
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: noteearly-backend
    ports:
      - "4000:4000"
    environment:
      # App Configuration
      - NODE_ENV=production
      - PORT=4000

      # Database (Supabase)
      - DATABASE_URL=${DATABASE_URL}

      # Supabase Auth
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}

      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=1h
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_TOKEN_EXPIRY_SECONDS=604800

      # Frontend URLs
      - FRONTEND_REDIRECT_URL=${FRONTEND_REDIRECT_URL}
      - CLIENT_URL=${CLIENT_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - APP_URL=${APP_URL}

      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=100

      # Stripe Configuration
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}

      # Storage Configuration
      - STORAGE_BUCKET=${STORAGE_BUCKET}
    restart: unless-stopped
    networks:
      - noteearly-network

  # Frontend Next.js Service
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
    container_name: noteearly-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
    restart: unless-stopped
    networks:
      - noteearly-network
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  noteearly-network:
    driver: bridge
