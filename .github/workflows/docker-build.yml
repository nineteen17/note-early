name: Build and Deploy

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

env:
  DOCKER_REGISTRY: docker.io
  BACKEND_IMAGE_NAME: nineteen17dh/noteearly-backend
  FRONTEND_IMAGE_NAME: nineteen17dh/noteearly-frontend

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.BACKEND_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=main-,enable=${{ github.ref == 'refs/heads/main' }}
          type=sha,prefix=dev-,enable=${{ github.ref == 'refs/heads/dev' }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.FRONTEND_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=main-,enable=${{ github.ref == 'refs/heads/main' }}
          type=sha,prefix=dev-,enable=${{ github.ref == 'refs/heads/dev' }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./client
        file: ./client/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64
        build-args: |
          NEXT_PUBLIC_API_BASE_URL=https://api.noteearly.com/api/v1

  # Deploy to production server
  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "🚀 Starting deployment..."
            cd /opt/noteearly
            
            # Pull latest images
            docker-compose pull
            
            # Stop and restart containers
            docker-compose down
            docker-compose up -d
            
            # Clean up old images
            docker image prune -f
            
            # Show status
            docker-compose ps
            
            echo "✅ Deployment complete!"

      - name: Run database migrations
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "🔄 Running database migrations..."
            cd /opt/noteearly
            
            # Wait for backend to be healthy
            echo "⏳ Waiting for backend to be ready..."
            sleep 30
            
            # Check if backend is healthy
            for i in {1..12}; do
              if docker-compose ps | grep -q "noteearly-backend.*healthy"; then
                echo "✅ Backend is healthy, proceeding with migration"
                break
              fi
              echo "⏳ Waiting for backend health check... ($i/12)"
              sleep 10
            done
            
            # Run migrations using the compiled migration file
            echo "🗃️ Running database migrations..."
            docker exec noteearly-backend node dist/db/migrate.js
            
            if [ $? -eq 0 ]; then
              echo "✅ Database migrations completed successfully!"
            else
              echo "❌ Migration failed, but deployment continues"
              exit 0  # Don't fail the deployment if migration fails
            fi

  # Health check after deployment
  health-check:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Verify application health
        run: |
          echo "🏥 Checking application health..."
          
          # Wait a bit for services to stabilize
          sleep 30
          
          # Check frontend
          if curl -f -s https://noteearly.com > /dev/null; then
            echo "✅ Frontend is healthy"
          else
            echo "❌ Frontend health check failed"
            exit 1
          fi
          
          # Check API
          if curl -f -s https://api.noteearly.com/health > /dev/null; then
            echo "✅ API is healthy"
          else
            echo "❌ API health check failed"
            exit 1
          fi
          
          echo "🎉 All services are healthy and ready!"